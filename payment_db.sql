DROP DATABASE payment;
CREATE DATABASE payment;

\c payment
--KEEPING LOGIN INFO SEPERATE FROM USERS AND MERCHANTS INFO
/*
DROP TABLE C2B_TRANSX_INFO;
DROP TABLE B2B_TRANSX_INFO;
DROP TABLE P2P_TRANSX_INFO;
DROP TABLE LENDING_INFO;
DROP TABLE FUNDS_TRANSFER_DETAILS;
DROP TABLE MERCHANT;
DROP TABLE CREDIT_RATING;
DROP TABLE USER_;
DROP TABLE LOGIN_INFO;
*/
CREATE TABLE LOGIN_INFO( 
	EMAIL_ID VARCHAR(20) NOT NULL UNIQUE,
	PASSWORD VARCHAR(20) NOT NULL,
	USER_NICK_NAME VARCHAR(10) NOT NULL UNIQUE,
	PRIMARY KEY(EMAIL_ID)
);

CREATE TABLE BANK_DETAIL(
	--FT_ID INT NOT NULL,
	ACCOUNT VARCHAR(30) NOT NULL UNIQUE,
	BANK_IFSC_CODE VARCHAR(20) NOT NULL,
	--AMOUNT FLOAT NOT NULL,
	--TRANSX_FEE FLOAT NOT NULL,
	CUST_TYPE VARCHAR(10) NOT NULL,
	--FOREIGN KEY(CUST_ID) REFERENCES LOGIN_INFO(CUST_ID) ON DELETE CASCADE,
	PRIMARY KEY(ACCOUNT)
);

CREATE TABLE USER_(
	USER_ID VARCHAR(10) NOT NULL UNIQUE,
	USER_NAME VARCHAR(30) NOT NULL UNIQUE,
	ACCOUNT VARCHAR(30) NOT NULL UNIQUE,
	EMAIL_ID VARCHAR(40) NOT NULL UNIQUE,
	PHONE_NO VARCHAR(10) NOT NULL UNIQUE,
	BALANCE FLOAT NOT NULL,-- CHECK BALANCE >= 0.0,
	STREET_ADDR VARCHAR(40) NOT NULL,
	CITY VARCHAR(20) NOT NULL,
	STATE VARCHAR(10) NOT NULL, 
	PRIMARY KEY(USER_ID),
	--FOREIGN KEY(USER_ID) REFERENCES LOGIN_INFO(CUST_ID) ON DELETE CASCADE
	FOREIGN KEY(EMAIL_ID) REFERENCES LOGIN_INFO(EMAIL_ID),
	FOREIGN KEY(ACCOUNT) REFERENCES BANK_DETAIL(ACCOUNT)
 	--CREDIT RATING IS PRIVILEDGED 
	--INFO AND IS KEPT IN A SEPERATE TABLE
);

CREATE TABLE CREDIT_RATING(
	USER_ID VARCHAR(10) NOT NULL,
	CRISIL_SCORE FLOAT NOT NULL,
	CIBIL_SCORE FLOAT NOT NULL,
	ICRA_SCORE FLOAT NOT NULL,
	FOREIGN KEY(USER_ID) REFERENCES USER_(USER_ID) ON DELETE CASCADE
);

CREATE TABLE MERCHANT(
	MERCH_ID VARCHAR(10) NOT NULL UNIQUE,
	MERCH_NAME VARCHAR(30) NOT NULL UNIQUE,
	PHONE_NO VARCHAR(10) NOT NULL UNIQUE,
	ACCOUNT VARCHAR(30) NOT NULL UNIQUE,
	STREET_ADDR VARCHAR(40) NOT NULL,
	CITY VARCHAR(20) NOT NULL,
	STATE VARCHAR(10) NOT NULL,
	EMAIL_ID VARCHAR(40) NOT NULL UNIQUE,
	BALANCE FLOAT NOT NULL,-- CHECK BALANCE >= 0.0,
	PRIMARY KEY(MERCH_ID),
	FOREIGN KEY(EMAIL_ID) REFERENCES LOGIN_INFO(EMAIL_ID),
	FOREIGN KEY(ACCOUNT) REFERENCES BANK_DETAIL(ACCOUNT)
	--FOREIGN KEY(MERCH_ID) REFERENCES LOGIN_INFO(CUST_ID) ON DELETE CASCADE
	--DETAILED TAX INFO IS KEPT IN SEPERATE TABLE
	--OR WE COULD GENERATE ONSPOT WITH TRANSACTIONS
	--CHECK BALANCE >= 0
);
--we could also link the foreign keys to bank_detail
CREATE TABLE TRANSFER_USER_INFO(
	ID INT NOT NULL UNIQUE,
	ACCOUNT VARCHAR(30) NOT NULL UNIQUE,
	AMOUNT FLOAT NOT NULL,
	CUST_ID VARCHAR(10) NOT NULL,
	TYPE VARCHAR(10),
	FOREIGN KEY(ACCOUNT) REFERENCES USER_(ACCOUNT) ON DELETE CASCADE,
	PRIMARY KEY(ID)
);
CREATE TABLE TRANSFER_MERCH_INFO(
	ID INT NOT NULL UNIQUE,
	ACCOUNT VARCHAR(30) NOT NULL UNIQUE,
	AMOUNT FLOAT NOT NULL,
	CUST_ID VARCHAR(10) NOT NULL,
	TYPE VARCHAR(10),
	FOREIGN KEY(ACCOUNT) REFERENCES MERCHANT(ACCOUNT) ON DELETE CASCADE,
	PRIMARY KEY(ID)	
);

CREATE TABLE LENDING_INFO(
	PRINCIPAL_AMOUNT INT NOT NULL,
	DURATION  INTERVAL NOT NULL,
	DATE_OF_LOAN DATE NOT NULL,
	INTEREST_RATE FLOAT,-- CHECK INTEREST_RATE <= 20.0,
	LEND_ID INT NOT NULL,
	BORROWER_ID VARCHAR(10) NOT NULL,
	LENDER_ID VARCHAR(10) NOT NULL,
	FOREIGN KEY(LENDER_ID) REFERENCES USER_(USER_ID) ON DELETE CASCADE,
	FOREIGN KEY(BORROWER_ID) REFERENCES USER_(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY(LEND_ID)
);

CREATE TABLE P2P_TRANSX_INFO(
	TRANSX_ID INT NOT NULL,
	AMOUNT FLOAT NOT NULL,
	RECEIVEE_ID VARCHAR(10) NOT NULL,
	PAYEE_ID VARCHAR(10) NOT NULL,
	-- LETS NOT KEEP FOR P2P TRANSX_FEE FLOAT NOT NULL,
	FOREIGN KEY(PAYEE_ID) REFERENCES USER_(USER_ID) ON DELETE CASCADE,
	FOREIGN KEY(RECEIVEE_ID) REFERENCES USER_(USER_ID) ON DELETE CASCADE,
	PRIMARY KEY(TRANSX_ID)
);

CREATE TABLE C2B_TRANSX_INFO(
	TRANSX_ID INT NOT NULL,
	BILL_VALUE FLOAT NOT NULL,
	TAXES FLOAT NOT NULL,
	BILL_VALUE_BEFORE_TAXES FLOAT NULL,
	RECEIVEE_ID VARCHAR(10) NOT NULL,
	PAYEE_ID VARCHAR(10) NOT NULL,
	TRANSX_FEE FLOAT NOT NULL,
	FOREIGN KEY(PAYEE_ID) REFERENCES USER_(USER_ID) ON DELETE CASCADE,
	FOREIGN KEY(RECEIVEE_ID) REFERENCES MERCHANT(MERCH_ID) ON DELETE CASCADE,
	PRIMARY KEY(TRANSX_ID)
);

CREATE TABLE B2B_TRANSX_INFO(
	TRANSX_ID INT NOT NULL,
	BILL_VALUE FLOAT NOT NULL,
	TAXES FLOAT NOT NULL,
	BILL_VALUE_BEFORE_TAXES FLOAT NULL,
	RECEIVEE_ID VARCHAR(10) NOT NULL,
	PAYEE_ID VARCHAR(10) NOT NULL,
	TRANSX_FEE FLOAT NOT NULL,
	FOREIGN KEY(PAYEE_ID) REFERENCES MERCHANT(MERCH_ID) ON DELETE CASCADE,
	FOREIGN KEY(RECEIVEE_ID) REFERENCES MERCHANT(MERCH_ID) ON DELETE CASCADE,
	PRIMARY KEY(TRANSX_ID)
);
